from aiogram import F
from aiogram.dispatcher.router import Router
from aiogram.types import CallbackQuery, InputMediaPhoto, FSInputFile
from aiogram.fsm.context import FSMContext

from callback_factories.QuestionGameCallbackFactory import QuestionGameCallbackFactory
from states.Game_state import GameState

from loader import bot, game_data

from keyboards.game import create_start_game_kb, create_question_kb
from keyboards.help import create_help_kb

from utils.game import calc_percent_true_answers, define_type_game_result

router: Router = Router(name='gameRouter')


@router.callback_query(F.data == 'send_game_msg')
async def send_start_game_msg(callback: CallbackQuery) -> None:
    '''
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ c –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏–≥—Ä—ã
    '''

    photo = InputMediaPhoto(media=FSInputFile(path='assets/img/game.jpg'),
                            caption='üéÆ <b>–ò–≥—Ä–∞-–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞</b> üéÆ\n\n–ò–≥—Ä–∞-–≤–∏–∫—Ç–æ—Ä–∏–Ω–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∏–∑ —Å–µ–±—è –Ω–µ–±–æ–ª—å—à–æ–π —Ç–µ—Å—Ç –Ω–∞ –∑–Ω–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—è—Ö –ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏.\n\n–í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞ –≤–∞–º –±—É–¥–µ—Ç –ø—Ä–∏—Å–≤–æ–µ–Ω–æ –∑–≤–∞–Ω–∏–µ.\n\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ò–≥—Ä–∞—Ç—å".\n\nP.S. <i>–°—Ç–∞–Ω—å –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–º –ø–æ–∫–æ—Ä–∏—Ç–µ–ª–µ–º –∑–µ–º–µ–ª—å, —è –≤–µ—Ä—é –≤ —Ç–µ–±—è!</i>')

    await bot.edit_message_media(chat_id=callback.message.chat.id,
                                 message_id=callback.message.message_id,
                                 media=photo,
                                 reply_markup=create_start_game_kb())

    return None


@router.callback_query(F.data == 'start_game')
async def send_game_question_msg(callback: CallbackQuery, state: FSMContext) -> None:
    '''
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–æ–ø—Ä–æ—Å
    '''

    await callback.message.delete()

    await state.set_state(GameState.question_index)
    await state.update_data(question_index=0)
    await state.update_data(score=0)

    question = game_data[0]['question']

    await bot.send_message(
        chat_id=callback.message.chat.id,
        text=question,
        reply_markup=create_question_kb(0)
    )

    return None


@router.callback_query(GameState.question_index, QuestionGameCallbackFactory.filter())
async def process_question_answere(callback: CallbackQuery,
                                   callback_data: QuestionGameCallbackFactory,
                                   state: FSMContext) -> None:
    '''
    –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å
    '''
    state_data: dict[str, any] = await state.get_data()

    question_index = state_data["question_index"]
    user_score = state_data["score"]

    true_answer_index = game_data[question_index]['true_answer_index']

    if true_answer_index == callback_data.question_index:
        user_score += 1

        await state.update_data(score=user_score)

    if question_index < (len(game_data) - 1):
        question_index += 1

        question = game_data[question_index]

        await state.update_data(question_index=question_index)

        # await callback.message.delete()

        await callback.message.edit_text(
            text=question['question'],
            reply_markup=create_question_kb(question_index))

        await callback.answer()
    else:
        state_data: dict[str, any] = await state.get_data()

        await callback.message.delete()

        await send_game_results(chat_id=callback.message.chat.id, score=state_data["score"])

        await state.clear()

        await callback.answer()


async def send_game_results(chat_id: int, score: int) -> None:
    '''
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∏–≥—Ä—ã
    '''

    question_count = len(game_data)

    match define_type_game_result(calc_percent_true_answers(score, question_count)):
        case 'pro':
            message_text = (f"üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º</b> üéâ\n–í—ã –¥–æ—à–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞ –∏ –æ—Ç–ª–∏—á–Ω–æ –ø—Ä–æ—à–∏–ª —Ç–µ—Å—Ç. –ö–∞–∫ –Ω–∞—Å—á—ë—Ç –ø–æ–º–µ–Ω—è—Ç—å –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ –Ω–∞ —Ç—É—Ä–∏–∑–º?"
                            f'\n\n<b>–í–∞—à–µ –∑–≤–∞–Ω–∏–µ:</b> –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–∏–¥'
                            f"\n\n<b>–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</b> {score}/"
                            f"{question_count}\n\n")

            photo_path = "assets/img/pro.jpg"

            photo = FSInputFile(path=photo_path)

            await bot.send_photo(chat_id=chat_id,
                                 photo=photo,
                                 caption=message_text,
                                 reply_markup=create_help_kb())
        case 'middle':
            message_text = (f"üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º</b> üéâ\n–í—ã –¥–æ—à–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞ –∏ —Ö–æ—Ä–æ—à–æ –ø—Ä–æ—à–ª–∏ —Ç–µ—Å—Ç. –í—ã —Ç–æ—á–Ω–æ –Ω–µ –∑–∞–±–ª—É–¥–∏—Ç–µ—Å—å –∏ —Å–º–æ–∂–µ—Ç–µ —Å–º–µ–ª–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –º–µ—Å—Ç–Ω–æ—Å—Ç–∏."
                            f'\n\n<b>–í–∞—à–µ –∑–≤–∞–Ω–∏–µ:</b> –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫'
                            f"\n\n<b>–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</b> {score}/"
                            f"{question_count}\n\n")

            photo_path = "assets/img/middle.jpg"

            photo = FSInputFile(path=photo_path)

            await bot.send_photo(chat_id=chat_id,
                                 photo=photo,
                                 caption=message_text,
                                 reply_markup=create_help_kb())
        case 'junior':
            message_text = (f"üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</b> üéâ\n–í—ã –¥–æ—à–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞ –∏ –ø–æ—á—Ç–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ —Ç–µ—Å—Ç, –Ω–æ –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –≤—Å—Ç–∞–ª–∏ —Å–µ–≥–æ–¥–Ω—è –Ω–µ —Å—Ç–æ–π –Ω–æ–≥–∏."
                            f'\n\n<b>–í–∞—à–µ –∑–≤–∞–Ω–∏–µ:</b> –∑–µ–≤–∞–∫–∞'
                            f"\n\n<b>–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:</b> {score}/{question_count}"
                            f"\n\n")

            photo_path = "assets/img/junior.jpg"

            photo = FSInputFile(path=photo_path)

            await bot.send_photo(chat_id=chat_id,
                                 photo=photo,
                                 caption=message_text,
                                 reply_markup=create_help_kb())
